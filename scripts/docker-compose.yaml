version: '3.8'
services:

  # container1 - DATABASE
  database:
    container_name: database
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=cc0
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=web_db
    # volumes:
      # ./scripts/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      # ./src/database/init.sql:/var/lib/postgresql/data/init.sql.
    healthcheck:
      test: psql -U cc0 -q -d web_db -c "SELECT 'ready';"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    ports:
      - "5460:5432"
    networks:
      my_network:
        ipv4_address: 172.56.0.2
    
  # container2 - Full-stack Application
  fullstack:
    container_name: fullstack
    image: nginx
    ports:
      - "9091:443"
    volumes:
      # nginx config
      - ./nginx.conf:/etc/nginx/nginx.conf
      # pem files for TLS
      - ../cert.pem:/etc/ssl/certs/cert.pem
      - ../key.pem:/etc/ssl/certs/key.pem
      # frontend dist (compile /frontend with: trunk build --release)
      - ../frontend/dist:/var/www/html
      # backend executable (compile /server with: cargo build --release)
      - ../target/release/server:/usr/bin/server
    restart: always
    networks:
      my_network:
        ipv4_address: 172.56.0.3

networks:
  my_network:
    ipam:
      driver: default
      config:
        - subnet: 172.56.0.0/16
          gateway: 172.56.0.1
